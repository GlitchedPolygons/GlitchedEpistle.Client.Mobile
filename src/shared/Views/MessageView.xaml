<?xml version="1.0" encoding="utf-8"?>

<!--
         Glitched Epistle - Mobile Client
         Copyright (C) 2019 Raphael Beck
         
         This program is free software: you can redistribute it and/or modify
         it under the terms of the GNU General Public License as published by
         the Free Software Foundation, either version 3 of the License, or
         (at your option) any later version.
         
         This program is distributed in the hope that it will be useful,
         but WITHOUT ANY WARRANTY; without even the implied warranty of
         MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
         GNU General Public License for more details.
         
         You should have received a copy of the GNU General Public License
         along with this program.  If not, see <https://www.gnu.org/licenses/>.
-->

<ContentView xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             x:Name="Message"
             x:Class="GlitchedPolygons.GlitchedEpistle.Client.Mobile.Views.MessageView"
             BackgroundColor="{DynamicResource PageBackgroundColor}"
             Margin="0,13.37,0,0"
             xmlns:i="clr-namespace:GlitchedPolygons.GlitchedEpistle.Client.Mobile.Extensions"
             xmlns:ff="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
             xmlns:fft="clr-namespace:FFImageLoading.Transformations;assembly=FFImageLoading.Transformations"
             xmlns:converters="clr-namespace:GlitchedPolygons.GlitchedEpistle.Client.Mobile.Converters;assembly=GlitchedPolygons.GlitchedEpistle.Client.Mobile"
             xmlns:effects="clr-namespace:GlitchedPolygons.GlitchedEpistle.Client.Mobile.Effects;assembly=GlitchedPolygons.GlitchedEpistle.Client.Mobile">
    <ContentView.Content>

        <Frame Opacity="0.675"
               Margin="0,0,0,0"
               Padding="13.37"
               CornerRadius="25.00">

            <StackLayout>

                <!--{Binding SenderName}-->
                <Label Text="{Binding SenderName}"
                       Margin="0,0,0,-5"
                       FontSize="14"
                       FontAttributes="Bold"
                       Style="{DynamicResource MediumLabelStyle}" />

                <StackLayout Orientation="Horizontal"
                             HorizontalOptions="Start">

                    <!--{Binding SenderId}-->
                    <Label Text="{Binding SenderId}"
                           FontSize="12.5"
                           Margin="0,0,0,0"
                           HorizontalOptions="Start"
                           Style="{DynamicResource MediumLabelStyle}"
                           FontAttributes="Italic" />

                    <!-- Copy user id to clipboard button -->
                    <ff:CachedImage WidthRequest="18"
                                    HeightRequest="18"
                                    DownsampleToViewSize="True"
                                    HorizontalOptions="Start"
                                    IsEnabled="{Binding ClipboardTickVisible, Converter={converters:InverseBoolConverter}}"
                                    IsVisible="{Binding ClipboardTickVisible, Converter={converters:InverseBoolConverter}}"
                                    Source="{i:ImageResource GlitchedPolygons.GlitchedEpistle.Client.Mobile.Resources.Images.clipboard-icon.png}">
                        <ff:CachedImage.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding CopyUserIdToClipboardCommand}" />
                        </ff:CachedImage.GestureRecognizers>
                    </ff:CachedImage>
                    <ff:CachedImage WidthRequest="18"
                                    HeightRequest="18"
                                    DownsampleToViewSize="True"
                                    VerticalOptions="CenterAndExpand"
                                    HorizontalOptions="CenterAndExpand"
                                    IsVisible="{Binding ClipboardTickVisible}"
                                    Source="{i:ImageResource GlitchedPolygons.GlitchedEpistle.Client.Mobile.Resources.Images.green-tick.png}" />
                </StackLayout>

                <!-- Separator wall -->
                <BoxView Color="{DynamicResource SecondaryTextColor}"
                         BackgroundColor="{DynamicResource SecondaryTextColor}"
                         Style="{DynamicResource HorizontalSeparatorLineStyle}" />

                <!--{Binding Timestamp}-->
                <Label FontSize="12"
                       Margin="0"
                       Text="{Binding Timestamp}"
                       Style="{DynamicResource MediumLabelStyle}" />

                <!-- Text -->
                <Label FontSize="15"
                       Margin="0"
                       Text="{Binding Text}"
                       Style="{DynamicResource MessageLabelTextBox}"
                       IsVisible="{Binding HasAttachment, Converter={converters:InverseBoolConverter}}"
                       effects:LongPressedEffect.Command="{Binding Path=BindingContext.LongPressedMessageTextCommand, Source={x:Reference Message}}">
                    <Label.Effects>
                        <effects:LongPressedEffect />
                    </Label.Effects>
                </Label>

                <!-- Attachment -->
                <StackLayout Orientation="Horizontal"
                             IsVisible="{Binding HasAttachment}">

                    <Label Margin="0" 
                           Text="{i:Translate AttachmentLabel}"
                           FontSize="12"
                           Style="{DynamicResource MediumLabelStyle}"
                           VerticalOptions="Center" />

                    <Label Text="{Binding FileSize}"
                           FontSize="12"
                           Style="{DynamicResource MediumLabelStyle}"
                           VerticalOptions="Center" />
                    
                </StackLayout>
                
                <Button Text="{Binding FileName}"
                        Margin="0"
                        FontSize="12.5"
                        FontAttributes="Bold"
                        VerticalOptions="Center"
                        IsVisible="{Binding HasAttachment}"
                        Command="{Binding DownloadAttachmentCommand}" />


                <!-- Image (only displayed when attachment is an image) -->
                <ff:CachedImage WidthRequest="250"
                                HorizontalOptions="Center"
                                DownsampleToViewSize="True"
                                IsEnabled="{Binding ImageVisibility}"
                                IsVisible="{Binding ImageVisibility}"
                                Source="{Binding Image}">
                    <ff:CachedImage.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding ClickedOnImageAttachmentCommand}" />
                    </ff:CachedImage.GestureRecognizers>
                </ff:CachedImage>

                <!--
                    <Image Cursor="Hand"
                           Visibility="{Binding GifVisibility}"
                           Style="{DynamicResource ImageAttachmentStyle}"
                           MaxWidth="350"
                           MaxHeight="350"
                           Margin="5,26,0,-12"
                           Name="GifPreview"
                           HorizontalAlignment="Left"
                           gif:AnimationBehavior.AnimateInDesignMode="true"
                           gif:AnimationBehavior.RepeatBehavior="Forever"
                           gif:AnimationBehavior.SourceStream="{Binding FileBytesStream}">
                        <Image.InputBindings>
                            <MouseBinding Gesture="LeftClick"
                                          Command="{Binding ClickedOnImageAttachmentCommand}" />
                        </Image.InputBindings>
                    </Image>
                    -->

                <StackLayout.Style>
                    <Style TargetType="StackLayout">
                        <Style.Triggers>
                            <DataTrigger TargetType="StackLayout" Binding="{Binding IsOwn}" Value="True">
                                <Setter Property="HorizontalOptions" Value="End" />
                                <Setter Property="BackgroundColor" Value="{DynamicResource MessageSpeechBubbleColorOwn}" />
                            </DataTrigger>
                            <DataTrigger TargetType="StackLayout" Binding="{Binding IsOwn}" Value="False">
                                <Setter Property="HorizontalOptions" Value="Start" />
                                <Setter Property="BackgroundColor" Value="{DynamicResource MessageSpeechBubbleColor}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackLayout.Style>
            </StackLayout>

            <Frame.Style>
                <Style TargetType="Frame">
                    <Style.Triggers>
                        <DataTrigger TargetType="Frame" Binding="{Binding IsOwn}" Value="True">
                            <Setter Property="HorizontalOptions" Value="End" />
                            <Setter Property="BackgroundColor" Value="{DynamicResource MessageSpeechBubbleColorOwn}" />
                        </DataTrigger>
                        <DataTrigger TargetType="Frame" Binding="{Binding IsOwn}" Value="False">
                            <Setter Property="HorizontalOptions" Value="Start" />
                            <Setter Property="BackgroundColor" Value="{DynamicResource MessageSpeechBubbleColor}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Frame.Style>
        </Frame>

    </ContentView.Content>
</ContentView>