<?xml version="1.0" encoding="utf-8"?>

<!--
         Glitched Epistle - Mobile Client
         Copyright (C) 2020 Raphael Beck
         
         This program is free software: you can redistribute it and/or modify
         it under the terms of the GNU General Public License as published by
         the Free Software Foundation, either version 3 of the License, or
         (at your option) any later version.
         
         This program is distributed in the hope that it will be useful,
         but WITHOUT ANY WARRANTY; without even the implied warranty of
         MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
         GNU General Public License for more details.
         
         You should have received a copy of the GNU General Public License
         along with this program.  If not, see <https://www.gnu.org/licenses/>.
-->

<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             xmlns:i="clr-namespace:GlitchedPolygons.GlitchedEpistle.Client.Mobile.Extensions"
             xmlns:ff="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
             xmlns:converters="clr-namespace:GlitchedPolygons.GlitchedEpistle.Client.Mobile.Converters"
             BackgroundColor="{DynamicResource PageBackgroundColor}"
             x:Class="GlitchedPolygons.GlitchedEpistle.Client.Mobile.Views.RecordVoiceMessagePage">
    <ContentPage.Content>
        <ScrollView>
            <StackLayout HorizontalOptions="Center"
                         VerticalOptions="Center"
                         MinimumWidthRequest="280"
                         Margin="32,32,32,50">

                <Label Style="{DynamicResource TitleLabelStyle}"
                       FontAttributes="Bold"
                       HorizontalOptions="Center"
                       HorizontalTextAlignment="Center"
                       Text="{i:Translate RecordAudioMessageLabel}" />

                <Label Text="{Binding ErrorMessage}"
                       TextColor="{DynamicResource ErrorMessageColor}"
                       LineBreakMode="WordWrap"
                       HorizontalOptions="Center"
                       HorizontalTextAlignment="Center"
                       FontSize="14" />

                <Label FontSize="14"
                       Margin="0,0,0,20"
                       HorizontalOptions="Center"
                       HorizontalTextAlignment="Center"
                       Style="{DynamicResource SubLabelStyle}"
                       Text="{i:Translate PreviewAudioRecordingLabel}" />
                
                <StackLayout Orientation="Horizontal"
                             HorizontalOptions="CenterAndExpand"
                             VerticalOptions="CenterAndExpand"
                             Margin="0,0,16,20"
                             IsVisible="{Binding Done, Converter={converters:InverseBoolConverter}}">
                    
                    <BoxView CornerRadius="8" 
                             Margin="0,8,5,0"
                             WidthRequest="16" 
                             HeightRequest="16" 
                             HorizontalOptions="Center" 
                             VerticalOptions="Center"
                             BackgroundColor="{Binding RecordingCircleColor}"/>
                    
                    <Label HeightRequest="32"
                           FontAttributes="Bold"
                           VerticalOptions="Center"
                           VerticalTextAlignment="Center"
                           HorizontalOptions="Center"
                           HorizontalTextAlignment="Center"
                           Text="{Binding Duration}"
                           Style="{DynamicResource MediumLabelStyle}" />
                </StackLayout>

                <StackLayout Margin="0,0,0,20"
                             HeightRequest="32"
                             Orientation="Horizontal"
                             IsVisible="{Binding Done}"
                             HorizontalOptions="FillAndExpand">

                    <ff:CachedImage x:Name="PlayIconCachedImage" 
                                    Aspect="AspectFit"
                                    WidthRequest="32"
                                    HeightRequest="32"
                                    VerticalOptions="Center"
                                    HorizontalOptions="Start"
                                    DownsampleToViewSize="True"
                                    IsEnabled="{Binding IsAudioPlaying, Converter={converters:InverseBoolConverter}}"
                                    IsVisible="{Binding IsAudioPlaying, Converter={converters:InverseBoolConverter}}"
                                    Source="{i:ImageResource GlitchedPolygons.GlitchedEpistle.Client.Mobile.Resources.Images.play-icon-white.png}">
                        <ff:CachedImage.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding ClickedOnPlayAudioAttachmentCommand}" />
                        </ff:CachedImage.GestureRecognizers>
                    </ff:CachedImage>

                    <ff:CachedImage x:Name="PauseIconCachedImage" 
                                    Aspect="AspectFit"
                                    WidthRequest="32"
                                    HeightRequest="32"
                                    VerticalOptions="Center"
                                    HorizontalOptions="Start"
                                    DownsampleToViewSize="True"
                                    IsEnabled="{Binding IsAudioPlaying}"
                                    IsVisible="{Binding IsAudioPlaying}"
                                    Source="{i:ImageResource GlitchedPolygons.GlitchedEpistle.Client.Mobile.Resources.Images.pause-icon-white.png}">
                        <ff:CachedImage.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding ClickedOnPlayAudioAttachmentCommand}" />
                        </ff:CachedImage.GestureRecognizers>
                    </ff:CachedImage>

                    <Slider Minimum="0.0"
                            Maximum="1.0"
                            Margin="-1,0"
                            HeightRequest="32"
                            VerticalOptions="Center"
                            HorizontalOptions="FillAndExpand"
                            DragCompletedCommand="{Binding AudioThumbDraggedCommand}"
                            Value="{Binding AudioThumbPos}" />

                    <Label FontSize="15"
                           HeightRequest="32"
                           VerticalOptions="Center"
                           VerticalTextAlignment="Center"
                           HorizontalOptions="Center"
                           HorizontalTextAlignment="Center"
                           Text="{Binding Duration}"
                           IsVisible="true"
                           Style="{DynamicResource MediumLabelStyle}" />
                </StackLayout>

                <StackLayout Orientation="Horizontal"
                             HorizontalOptions="FillAndExpand">

                    <CheckBox IsChecked="{Binding AskForConfirmation}"
                              VerticalOptions="CenterAndExpand"
                              Scale="1.1" />

                    <Label Text="{i:Translate AskForConfirmationBeforeSending}"
                           Style="{DynamicResource MediumLabelStyle}"
                           FontSize="16"
                           VerticalTextAlignment="Center"
                           VerticalOptions="CenterAndExpand" />
                </StackLayout>

                <StackLayout Spacing="16"
                             Margin="0,10,0,10"
                             IsVisible="{Binding Done, Converter={converters:InverseBoolConverter}}">

                    <Button Text="{i:Translate StartRecordingButton}"
                            x:Name="StartRecordingButton"
                            IsEnabled="{Binding IsRecording, Converter={converters:InverseBoolConverter}}"
                            IsVisible="{Binding IsRecording, Converter={converters:InverseBoolConverter}}"
                            Command="{Binding StartRecordingCommand}" />

                    <Button Text="{i:Translate StopRecordingButton}"
                            x:Name="StopRecordingButton"
                            IsEnabled="{Binding IsRecording}"
                            IsVisible="{Binding IsRecording}"
                            Command="{Binding StopRecordingCommand}" />
                </StackLayout>

                <StackLayout Spacing="16"
                             Margin="0,10,0,10"
                             IsVisible="{Binding Done}">

                    <Button Text="{i:Translate SendButton}"
                            x:Name="SendRecordingButton"
                            IsEnabled="{Binding Done}"
                            IsVisible="{Binding Done}"
                            Command="{Binding SendCommand}" />

                    <Button Text="{i:Translate ResetButton}"
                            x:Name="ResetRecordingButton"
                            IsEnabled="{Binding Done}"
                            IsVisible="{Binding Done}"
                            Command="{Binding ResetCommand}" />
                </StackLayout>

                <Button Text="{i:Translate CancelButton}"
                        x:Name="CancelButton"
                        IsVisible="true"
                        IsEnabled="{Binding CancelButtonEnabled}"
                        Command="{Binding CancelCommand}" />
            </StackLayout>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>