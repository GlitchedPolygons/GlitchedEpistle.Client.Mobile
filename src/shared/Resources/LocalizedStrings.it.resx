<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="2FA_Failure" xml:space="preserve">
    <value>Autentificazione a due fattori fallita!</value>
  </data>
  <data name="AttemptingLoginButton" xml:space="preserve">
    <value>Tento l'accesso...</value>
  </data>
  <data name="CancelButton" xml:space="preserve">
    <value>Annulla</value>
  </data>
  <data name="ChangeServerButton" xml:space="preserve">
    <value>Cambia Server</value>
  </data>
  <data name="ConfigServerUrlSubLabel" xml:space="preserve">
    <value>Puoi collegarti al server ufficiale di Epistle gratuitamente oppure ad un server terzo.</value>
  </data>
  <data name="ConfigServerUrlTitleLabel" xml:space="preserve">
    <value>P.f. collegarsi ad un server Epistle.</value>
  </data>
  <data name="ConnectButton" xml:space="preserve">
    <value>Conferma</value>
  </data>
  <data name="ConnectionToServerFailed" xml:space="preserve">
    <value>Tentativo di connessione al server specificato fallito.</value>
  </data>
  <data name="ConnectionToServerFailedErrorMsg" xml:space="preserve">
    <value>Connessione col server di Epistle fallita. P.f. assicurarsi di avere una connessione internet stabile e funzionante, e che l'indirizzo del server sia corretto.</value>
  </data>
  <data name="Copied" xml:space="preserve">
    <value>Copiato...</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copia</value>
  </data>
  <data name="DoNotTellSecretToAnyone" xml:space="preserve">
    <value>Non dire questo codice a nessuno!</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Errore</value>
  </data>
  <data name="ExportBackupCodesButton" xml:space="preserve">
    <value>Esporta codici d'emergenza</value>
  </data>
  <data name="GeneratingKeysLabel" xml:space="preserve">
    <value>Generazione chiavi 4096-bit RSA...</value>
  </data>
  <data name="GoogleAuthRecommendedLabel" xml:space="preserve">
    <value>(Preferibilmente Google Authenticator)</value>
  </data>
  <data name="HereAreYourBackupCodes" xml:space="preserve">
    <value>Eccoti qua i tuoi codici d'emergenza per l'autentificazione a due fattori. Salvateli da qualche parte al sicuro, possibilmente disconnesso da internet e NON CONDIVIDERLI con nessuno!</value>
  </data>
  <data name="KeyGenerationFailed" xml:space="preserve">
    <value>Si è verificato un errore durante la generazione della chiave RSA 4096-bit.</value>
  </data>
  <data name="LoginButton" xml:space="preserve">
    <value>Accedi</value>
  </data>
  <data name="PasswordConfirmationLabel" xml:space="preserve">
    <value>Conferma password</value>
  </data>
  <data name="PasswordLabel" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PleaseBackup2FASecret" xml:space="preserve">
    <value>Questo è il tuo segreto d'autentificazione a due fattori. Scrivilo giù e nascondilo da qualche parte al sicuro: ti servirà qual ora dovessi perdere il tuo dispositivo d'autentificazione.</value>
    <comment>This is your two-factor authentication secret. Back it up somewhere safe, because you'll need it if you lose your 2FA device.</comment>
  </data>
  <data name="PleaseEnterUsernameDialogTextLabel" xml:space="preserve">
    <value>I tuoi messaggi verranno firmati con questo nome. Puoi sceglierlo e cambiarlo liberamente, ma ricordati che è consigliato mantenerlo costante il più possibile una volta scelto, così che gli altri ti possono identificare più facilmente.</value>
    <comment>Messages will be sent using this name. This can be anything, but it's recommended to keep the same username as long as possible for other convo participants to easily identify you.</comment>
  </data>
  <data name="PleaseEnterUsernameDialogTitleLabel" xml:space="preserve">
    <value>Scegli un nome utente</value>
  </data>
  <data name="PleaseLoginLabel" xml:space="preserve">
    <value>Accedi ora:</value>
  </data>
  <data name="PleaseRegisterLabel" xml:space="preserve">
    <value>Crea ora il tuo account:</value>
  </data>
  <data name="PleaseSetUp2FALabel" xml:space="preserve">
    <value>P.f. configura ora la tua autentificazione a due fattori.</value>
  </data>
  <data name="PleaseVerify2FA" xml:space="preserve">
    <value>Per favore verifica il tuo token d'autentificazione a due fattori:</value>
  </data>
  <data name="RegisterButton" xml:space="preserve">
    <value>Registrati</value>
  </data>
  <data name="ResetButton" xml:space="preserve">
    <value>Ripristina</value>
  </data>
  <data name="ServerUrlEntry" xml:space="preserve">
    <value>Glitched Epistle Server URL</value>
  </data>
  <data name="TestConnectionButton" xml:space="preserve">
    <value>Prova connessione</value>
  </data>
  <data name="TotpLabel" xml:space="preserve">
    <value>Autentificazione a due fattori</value>
  </data>
  <data name="UserCreationFailedClientSideButSucceededServerSide" xml:space="preserve">
    <value>La creazione dell'utente è avvenuta con successo sul server, ma purtroppo è fallita localmente.</value>
  </data>
  <data name="UserCreationFailedServerSide" xml:space="preserve">
    <value>La creazione dell'utente è fallita: verificare che l'indirizzo e segreto del server sono validi.</value>
  </data>
  <data name="UserCreationSecretLabel" xml:space="preserve">
    <value>Segreto del server</value>
  </data>
  <data name="UserIdLabel" xml:space="preserve">
    <value>ID utente</value>
  </data>
  <data name="UsernameLabel" xml:space="preserve">
    <value>Nome utente</value>
  </data>
  <data name="Verify" xml:space="preserve">
    <value>Verifica</value>
  </data>
  <data name="WelcomeLabel" xml:space="preserve">
    <value>Benvenuto su Glitched Epistle.</value>
  </data>
  <data name="ConvoListEntryExpirationLabel" xml:space="preserve">
    <value>(Giorni rimanenti: {0})</value>
  </data>
</root>